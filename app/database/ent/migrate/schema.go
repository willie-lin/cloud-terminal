// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AssetsColumns holds the columns for the "assets" table.
	AssetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "asset_name", Type: field.TypeString},
		{Name: "asset_type", Type: field.TypeString},
		{Name: "asset_details", Type: field.TypeString},
		{Name: "group_id", Type: field.TypeInt},
	}
	// AssetsTable holds the schema information for the "assets" table.
	AssetsTable = &schema.Table{
		Name:       "assets",
		Columns:    AssetsColumns,
		PrimaryKey: []*schema.Column{AssetsColumns[0]},
	}
	// AssetGroupsColumns holds the columns for the "asset_groups" table.
	AssetGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AssetGroupsTable holds the schema information for the "asset_groups" table.
	AssetGroupsTable = &schema.Table{
		Name:       "asset_groups",
		Columns:    AssetGroupsColumns,
		PrimaryKey: []*schema.Column{AssetGroupsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "nickname", Type: field.TypeString},
		{Name: "totp_secret", Type: field.TypeString},
		{Name: "online", Type: field.TypeBool, Default: false},
		{Name: "enable_type", Type: field.TypeEnum, Enums: []string{"Enabled", "Disabled"}, Default: "Enabled"},
		{Name: "user_type", Type: field.TypeEnum, Enums: []string{"Admin", "Auditor", "SuperUser", "User"}, Default: "User"},
		{Name: "last_login_time", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserGroupsColumns holds the columns for the "user_groups" table.
	UserGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "group_name", Type: field.TypeString},
	}
	// UserGroupsTable holds the schema information for the "user_groups" table.
	UserGroupsTable = &schema.Table{
		Name:       "user_groups",
		Columns:    UserGroupsColumns,
		PrimaryKey: []*schema.Column{UserGroupsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AssetsTable,
		AssetGroupsTable,
		UsersTable,
		UserGroupsTable,
	}
)

func init() {
	AssetsTable.Annotation = &entsql.Annotation{
		Table: "assets",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
}
